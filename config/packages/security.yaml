security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/login_check
            stateless: true

        api:
            pattern: ^/api
            stateless: true
            jwt: ~

#        user:
#            pattern: ^/api/user
#            methods: [GET, PATCH]
#            stateless: true
#            jwt: ~

        main:
            lazy: true
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    role_hierarchy:
        ROLE_ADMIN: [ ROLE_USER ]
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN ]

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/register, roles: PUBLIC_ACCESS }
        - { path: ^/api/user/addAdmin, roles: ROLE_SUPER_ADMIN, methods: PATCH }
        - { path: ^/api/user/removeAdmin, roles: ROLE_SUPER_ADMIN, methods: PATCH }
        - { path: ^/api/user/acceptUser, roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN], methods: PATCH}
        - { path: ^/api/user/waitingValidation, roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN] }
        - { path: ^/api/tag, roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN], methods: [POST, DELETE] }
        - { path: ^/api/faculty, roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN], methods: POST}
        - { path: ^/api/faculty, roles: PUBLIC_ACCESS, methods: GET}
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }



          # - { path: ^/profile, roles: ROLE_USER }
